{"name":"Regdem2015","tagline":"Registratordemonstrator utviklet av studenter sommeren 2015","body":"# regdem2015\r\n\r\nRegistratordemonstrator 2015\r\n\r\n# Installasjon\r\n\r\nDenne installasjonsguiden tar deg gjennom installasjon av regdem2015, regdem2015-server og oppsett av testmiljø.\r\n\r\n__Innhold__\r\n\r\n1. [Systemkrav](#systemkrav)\r\n2. [Installasjon av regdem2015](#installasjon-av-regdem2015)\r\n3. [Installasjon av regdem2015-server (backend)](#installasjon-av-regdem2015-server-backend)\r\n4. [Testing](#testing)\r\n\r\n## Systemkrav\r\n\r\n* Git\r\n* nodejs\r\n* Python versjon fra versjon 2.5 til og med versjon 2.7.10 (ikke versjon 3)\r\n\r\nDe fleste OS kommer med Python 2.x installert, og vil derfor ikke være nødvendig å gjøre noe mer med det. Windows kommer uten Python, og må derfor installeres på egenhånd.\r\n\r\n\r\n## Installasjon av regdem2015\r\n\r\nFølg disse stegene for å laste ned, og bygge, regdem2015:\r\n\r\n```bash\r\ngit clone https://github.com/nvdb-vegdata/regdem2015\r\ncd regdem2015\r\nnpm install         # installerer tilhørende pakker\r\nnpm run build       # bygger applikasjonen\r\n```\r\n\r\nNår dette er gjort skal du få en fungerende kart ved å åpne `index.html` i nettleseren. Skrive-API vil ikke fungere på denne måten.\r\n\r\n\r\n#### Alternativ kjøring\r\n\r\nHar du problemer med å hente data fra lese-API kan det være greit å kjøre regdem2015 på en enkel HTTP-server, uavhengig av backend-koden. Kall til skrive-API vil da ikke fungere. Dette kan gjøres ved å feks. kjøre enn enkel HTTP Server ved bruk av Python:\r\n\r\n```bash\r\npython -m SimpleHTTPServer 8001\r\n```\r\n\r\nDa kan siden aksesseres via `http://localhost:8001`\r\n\r\n\r\n## Installasjon av regdem2015-server (backend)\r\n\r\nInstallasjon av Cookiemonster / backend for utviklign av regdem2015:\r\n\r\n```bash\r\n# klon regdem2015-server i samme mappe som regdem (ikke inne i regdem)\r\ngit clone https://github.com/nvdb-vegdata/regdem2015-server\r\ncd regdem2015-server\r\nnpm install                       # installerer tilhørende pakker\r\n```\r\n\r\nDeretter må du opprette en `config.js` fil under `./regdem2015-server` med følgende informasjon:\r\n\r\n```javascript\r\nmodule.exports = {\r\n  username: '',\r\n  password: ''\r\n}\r\n```\r\n\r\n_notat: brukerinformasjon må ha LDAP-tilgang, og være innenfor SVV-nettverket_\r\n\r\nFør du kan kjøre opp applikasjonen må du lage et alias av regdem2015 i `regdem2015-server`-mappen. Alternativt kan du kopiere regdem2015 inn i regdem2015-server.\r\n\r\n__For å lage alias på Unix/Linux:__\r\n\r\n```bash\r\ncd regdem2015-server              # pass på at du er inne i regdem2015-server mappen\r\nln -s /<path til>/regdem2015 .    # lager alias for regdem2015 inne i regdem2015-server\r\n```\r\n\r\nServer startes med kommandoen `node server.js` fra `./regdem2015-server`-mappen.\r\n\r\nServeren starter opp på port `8085`.\r\n\r\n* API URL: http://localhost:8085/api\r\n* Regdem URL: http://localhost:8085/app\r\n\r\n## Testing\r\n\r\n### RoboHydra\r\n\r\nRobohydra benyttes som en enkel mock-server for å kunne simulere serverspørring med mock-data uten å måtte endre på produksjonskode.\r\n\r\nDu trenger robohydra installert på maskinen med: `npm install robohydra -g`\r\n\r\nInne i `./regdem2015-server` kjører du `robohydra -n -P regdem`. RoboHydra-severen kjører opp på port `3000`.\r\n\r\n* API URL: http://localhost:3000/api\r\n* Regdem URL: http://localhost:3000/app\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}